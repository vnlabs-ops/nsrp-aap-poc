---
- name: PLAY 1 - Check Aruba switch for compliance
  hosts: network
  gather_facts: no

  vars_files:
  - vars/aruba.yaml

  
  tasks:
    
    - name: Run commands from the command list 
      register: cmd_outputs
      loop: "{{ compliance_checks }}"
      arubanetworks.aos_switch.arubaoss_command:
        commands: ["{{ item.command }}"]

    - name: get name of the current switch
      set_fact:
        switch_name: "{{ cmd_outputs.results[0].stdout[0] | regex_replace('^.*hostname.* (.*)$', '\\1') }}"

    - name: Check for results
      set_fact:
        check_result: >-
          {%- set check_result = [ switch_name, ansible_host ] -%}
          {%- set len = compliance_checks|length -%}
          {%- for i in range(1,len) -%}
            {%- set check_condition = namespace(value="OK") -%} 
            {%- set condition = compliance_checks[i].expected_result -%} 
            {%- if condition in cmd_outputs.results[i].stdout[0] -%}
                {%- set check_condition.value = "FAIL" -%}                                                       
            {%- endif -%}            
            {%- do check_result.append(check_condition.value) -%}
          {%- endfor -%}          
          {{ check_result }}

    - name: CSV - Create file 
      become: yes
      ansible.builtin.copy:
        dest: "{{ web_html_file_path }}/{{ csv_filename }}"                    
        content: " {{ csv_header }}"
        # owner: apache
        # group: apache
      run_once: yes  
      delegate_to: ubuntu

    - name: CSV - Build content line 
      set_fact:
        csv_line: "{{ check_result | join(',') }}"

    - name: CSV - Append content into file
      become: yes
      ansible.builtin.lineinfile:
        dest: "{{ web_html_file_path }}/{{ csv_filename }}" 
        line: "{{ csv_line }}"        
        state: present
      delegate_to: ubuntu
    
    # - name: CSV - Fetch file to aap 
    #   fetch:
    #     src: "{{ csv_filename }}" 
    #     dest: "{{ aap_csv_file_path }}"
    #     owner: awx
    #     group: awx

    # - name: create HTML report
    #   template:
    #     src: templates/switches.j2
    #     dest: ./switch_report.html
    #   delegate_to: localhost
    #   run_once: yes

